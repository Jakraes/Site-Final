"use strict"
let mapa = {
    back: document.getElementById("back"),
    front: document.getElementById("front"),
    grid_size: 109,
    collision:  [
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 7, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 0, 0, 1, 0, 2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1],
[0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 2, 2, 2, 0, 0, 1, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 2, 2, 2, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
[0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 3, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
[0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
[0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
[0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1],
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 2, 2, 2, 2, 2, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 2, 2, 2, 2, 2, 2, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
[0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 2, 2, 2, 2, 2, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
[0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 2, 2, 2, 2, 2, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
[0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 8, 1, 1, 8, 8, 8, 1, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
[0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 8, 2, 2, 2, 2, 2, 2, 1, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
[0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 8, 2, 2, 2, 2, 2, 2, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
[0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
[0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
[0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 8, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
[0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 8, 8, 8, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 4, 4, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 6, 1, 1, 1, 0, 1, 5, 5, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
[0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
[0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 8, 8, 8, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
[0, 0, 1, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
[0, 0, 1, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
[0, 0, 1, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
[0, 0, 1, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
[0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 1, 1, 0, 0, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
[0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 1, 1, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 1, 0, 0, 2, 1, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
[0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
[0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
[0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
[0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
[0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
[0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
[0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]
    ],        
}

let lab = {
    back: document.getElementById("labback"),
    front: document.getElementById("labfront"),
    grid_size: 9,
    collision: [
        [1,1,1,1,1,1,1,1,1,1,1],
        [1,1,1,1,1,1,1,1,1,1,1],
        [1,1,1,1,1,1,1,1,1,1,1],
        [1,1,1,0,0,0,0,1,1,1,1],
        [1,1,1,0,1,1,0,0,0,1,1],
        [1,0,0,0,1,1,0,0,0,0,1],
        [1,0,0,0,1,1,1,0,0,0,1],
        [1,0,0,0,4,4,4,0,0,0,1],
        [1,0,0,0,0,0,0,0,0,0,1],
        [1,1,0,0,0,0,0,0,0,1,1],
        [1,1,1,1,1,3,1,1,1,1,1],
    ]
}

let pokemart = {
    back: document.getElementById("shopback"),
    front: document.getElementById("invisible"),
    grid_size: 9,
    collision: [
        [1,1,1,1,1,1,1,1,1,1,1],
        [1,1,1,1,1,1,1,1,1,1,1],
        [1,1,1,1,1,1,1,1,1,1,1],
        [1,1,1,1,2,0,0,0,0,0,1],
        [1,1,1,1,0,1,1,1,1,0,1],
        [1,1,1,1,0,0,0,0,0,0,1],
        [1,1,0,0,0,0,0,0,0,0,1],
        [1,0,0,0,0,1,1,1,1,0,1],
        [1,0,0,0,0,0,0,0,0,0,1],
        [1,1,0,0,0,0,0,0,0,1,1],
        [1,1,1,1,1,5,1,1,1,1,1],
    ]
}

let pokecenter = {
    back: document.getElementById("centerback"),
    front: document.getElementById("centerfront"),
    grid_size: 9,
    collision: [
        [1,1,1,1,1,1,1,1,1,1,1],
        [1,1,1,1,1,1,1,1,1,1,1],
        [1,1,1,1,1,1,1,1,1,1,1],
        [1,1,1,1,1,1,1,1,1,1,1],
        [1,0,1,1,1,1,1,1,1,0,1],
        [1,0,0,0,0,2,0,0,0,0,1],
        [1,0,1,1,0,0,0,0,0,0,1],
        [1,0,1,1,0,0,0,0,0,0,1],
        [1,0,0,0,0,0,0,0,0,0,1],
        [1,1,0,0,0,0,0,0,0,1,1],
        [1,1,1,1,1,4,1,1,1,1,1],
    ]
}

let gym = {
    back: document.getElementById("gymback"),
    front: document.getElementById("gymfront"),
    grid_size: 12,
    collision: [
        [1,1,1,1,1,1,1,1,1,1,1,1,1,1],
        [1,1,1,1,1,1,1,1,1,1,1,1,1,1],
        [1,1,1,1,1,1,1,1,1,1,1,1,1,1],
        [1,1,1,1,1,1,1,1,1,1,1,1,1,1],
        [1,1,1,1,1,1,1,1,1,1,1,1,1,1],
        [1,1,1,1,1,1,1,1,1,1,1,1,1,1],
        [1,1,1,1,1,1,1,1,1,1,1,1,1,1],
        [1,1,1,1,1,1,1,1,1,1,1,1,1,1],
        [1,0,0,0,0,0,1,1,0,0,0,0,0,1],
        [1,0,0,0,0,0,2,2,0,0,0,0,0,1],
        [1,1,1,1,1,1,0,0,1,1,1,1,1,1],
        [1,1,1,1,1,1,0,0,1,1,1,1,1,1],
        [1,1,1,1,1,1,0,0,1,1,1,1,1,1],
        [1,1,1,1,1,1,0,0,1,1,1,1,1,1],
        [1,1,1,1,1,1,0,0,1,1,1,1,1,1],
        [1,1,1,1,1,1,0,0,1,1,1,1,1,1],
        [1,0,0,0,0,0,0,0,0,0,0,0,0,1],
        [1,0,0,0,0,0,1,1,0,0,0,0,0,1],
        [1,0,0,0,0,0,2,2,0,0,0,0,0,1],
        [1,0,0,0,0,0,0,0,0,0,0,0,0,1],
        [1,0,0,0,0,0,0,0,0,0,0,0,0,1],
        [1,0,0,0,0,0,0,0,0,0,0,0,0,1],
        [1,1,1,0,1,1,1,1,1,1,0,1,1,1],
        [1,1,1,0,1,1,1,1,1,1,0,1,1,1],
        [1,0,0,0,0,0,0,0,0,0,0,0,0,1],
        [1,0,0,0,0,0,1,1,0,0,0,0,0,1],
        [1,0,0,0,0,0,2,2,0,0,0,0,0,1],
        [1,0,0,0,0,0,0,0,0,0,0,0,0,1],
        [1,0,0,0,0,0,0,0,0,0,0,0,0,1],
        [1,0,0,0,0,0,0,0,0,0,0,0,0,1],
        [1,1,0,1,1,1,1,1,1,1,1,0,1,1],
        [1,1,0,1,1,1,1,1,1,1,1,0,1,1],
        [1,0,0,0,0,0,0,0,0,0,0,0,0,1],
        [1,0,0,0,0,0,1,1,0,0,0,0,0,1],
        [1,0,0,0,0,0,2,2,0,0,0,0,0,1],
        [1,0,0,0,0,0,0,0,0,0,0,0,0,1],
        [1,0,0,0,0,0,0,0,0,0,0,0,0,1],
        [1,0,0,0,0,1,0,0,1,0,0,0,0,1],
        [1,1,1,1,1,1,0,0,1,1,1,1,1,1],
        [1,1,1,1,1,1,0,0,1,1,1,1,1,1],
        [1,0,0,0,0,0,0,0,0,0,0,0,0,1],
        [1,0,0,0,0,0,0,0,0,0,0,0,0,1],
        [1,0,0,0,0,0,0,0,0,0,0,0,0,1],
        [1,0,0,0,0,0,0,0,0,0,0,0,0,1],
        [1,0,0,0,0,0,0,0,0,0,0,0,0,1],
        [1,1,1,1,1,1,6,6,1,1,1,1,1,1],
    ]
}

let cave = {
    back: document.getElementById("caveback"),
    front: document.getElementById("cavefront"),
    grid_size: 42,
    collision: [
[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
[1,1,1,1,1,1,1,1,1,1,3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
[1,1,1,1,1,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
[1,1,1,1,1,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
[1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
[1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
[1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
[1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
[1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
[1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
[1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1],
[1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1],
[1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1],
[1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1],
[1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1],
[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1],
[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1],
[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,1,1,1,1,1],
[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,1,2,2,2,2,2,2,2,2,1,2,2,2,2,2,1,1,1,1,1],
[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1],
[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1],
[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1],
[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1],
[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1],
[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1],
[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,7,7,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
    ]
}

//------------------------------------------------------------------------------------//

let currentMap = mapa;
var town = document.getElementById("townaudio")
var fightaudio = document.getElementById("fightaudio")

//------------------------------------------------------------------------------------//

let background_canvas = document.getElementById("jogo");
let background_context = background_canvas.getContext("2d");
background_context.imageSmoothingEnabled = false;
let background_map = currentMap.back;


let character_canvas = document.getElementById("characterc");
let character_context = character_canvas.getContext("2d");
character_context.imageSmoothingEnabled = false;
let character_map = document.getElementById("character");
let character_grass = document.getElementById("charactergrass")


let front_canvas = document.getElementById("frontmap");
let front_context = front_canvas.getContext("2d");
front_context.imageSmoothingEnabled = false;
let frontmap = currentMap.front;


const unit = background_map.width/mapa.grid_size
const map_unit = background_canvas.width/9
const height = background_canvas.height
const width = height
const time = 20

background_context.drawImage(background_map, unit*15, unit*21, unit*9, unit*9, 0, 0, width, height)
front_context.drawImage(frontmap, unit*16, unit*17, unit*9, unit*9, 0, 0, width, height)
character_context.drawImage(character_map, 0, 0, 22, 27, map_unit*4, map_unit*4-(map_unit*(27/22)-map_unit), map_unit, map_unit*(27/22));


//------------------------------------------------------------------------------------//

mapa.startpos = [unit*15, unit*21]
lab.startpos = [unit*0, unit*5]

//------------------------------------------------------------------------------------//

let moves = {
    tackle: {name: "Tackle", damage: 0.1, accuracy: 1, type: "normal", effects: null},
    scratch: {name: "Scratch", damage: 0.1, accuracy: 1, type: "normal", effects: null},
    leer: {name: "Leer", damage: 0, accuracy: 1, type: "normal", effects: ["dodge", 10]},
    growl: {name: "Growl", damage: 0, accuracy: 1, type: "normal", effects: ["attack", 20]},
    sand_attack: {name: "Sand Attack", damage: 0, accuracy: 1, type: "normal", effects: ["accuracy", 20]},
    wing_attack: {name: "Wing Attack", damage: 0.1, accuracy: 1, type: "flying", effects: null},
    vine_whip: {name: "Vine Whip", damage: 0.1, accuracy: 1, type: "grass", effects: null},
    ember: {name: "Ember", damage: 0.1, accuracy: 1, type: "fire", effects: null},
    water_gun: {name: "Water Gun", damage: 0.1, accuracy: 1, type: "water", effects: null},
    zen_headbutt: {name: "Zen Headbutt", damage: 0.1, accuracy: 1, type: "psychic", effects: null},
    low_kick: {name: "Low Kick", damage: 0.1, accuracy: 1, type: "fighting", effects: null},
    thunder_bolt: {name: "Thunder Bolt", damage: 0.12, accuracy: 1, type: "electric", effects: null},
    poison_fang: {name: "Poison Fang", damage: 0.12, accuracy: 1, type: "poison", effects: null},
    none: {name: "", damage: 0, accuracy: 1, type: "normal", effects: null},
}

let pokemon = {
    bulbasaur: {name: "Bulbasaur", maxHP: 30, attack: 70, dodge: 10, accuracy: 80, weakness: ["fire", "poison"], moves: [moves.tackle, moves.vine_whip, moves.growl, moves.leer], sprite: document.getElementById("bulbasaur")},
    charmander: {name: "Charmander", maxHP: 30, attack: 80, dodge: 10, accuracy: 75, weakness: ["water"], moves: [moves.scratch, moves.ember, moves.growl, moves.leer], sprite: document.getElementById("charmander")},
    squirtle: {name: "Squirtle", maxHP: 35, attack: 70, dodge: 10, accuracy: 80, weakness: ["grass"], moves: [moves.tackle, moves.water_gun, moves.sand_attack, moves.leer], sprite: document.getElementById("squirtle")},
    ratata: {name: "Ratata", maxHP: 20, attack: 70, dodge: 30, accuracy: 90, weakness: ["none"], moves: [moves.tackle, moves.leer, moves.sand_attack, moves.none], sprite: document.getElementById("ratata")},
    pidgey: {name: "Pidgey", maxHP: 20, attack: 80, dodge: 30, accuracy: 80, weakness: ["none"], moves: [moves.scratch, moves.wing_attack, moves.sand_attack, moves.none], sprite: document.getElementById("pidgey")},
    caterpie: {name: "Caterpie", maxHP: 20, attack: 60, dodge: 50, accuracy: 80, weakness: ["flying", "fire"], moves: [moves.tackle, moves.leer, moves.none, moves.none], sprite: document.getElementById("caterpie")},
    geodude: {name: "Geodude", maxHP: 2000, attack: 500, dodge: 30, accuracy: 140, weakness: ["fire", "fighting", "water"], moves: [moves.tackle, moves.vine_whip, moves.growl, moves.leer], sprite: document.getElementById("geodude")},
    zubat: {name: "Zubat", maxHP: 1500, attack: 300, dodge: 40, accuracy: 120, weakness: ["rock", "electric", "psychic"], moves: [moves.scratch, moves.poison_fang, moves.growl, moves.leer], sprite: document.getElementById("zubat")},
    psyduck: {name: "Psyduck", maxHP: 60, attack: 90, dodge: 20, accuracy: 90, weakness: ["electric", "grass"], moves: [moves.scratch, moves.water_gun, moves.zen_headbutt, moves.leer], sprite: document.getElementById("psyduck")},
    machop: {name: "Machop", maxHP: 50, attack: 100, dodge: 30, accuracy: 120, weakness: ["psychic", "flying"], moves: [moves.tackle, moves.low_kick, moves.leer, moves.sand_attack], sprite: document.getElementById("machop")},
    pikachu: {name: "Pikachu", maxHP: 70, attack: 105, dodge: 35, accuracy: 110, weakness: ["rock"], moves: [moves.tackle, moves.thunder_bolt, moves.leer, moves.sand_attack], sprite: document.getElementById("pikachu")},
}

let cave_pokemon = {
    geodude: {name: "Geodude", maxHP: 2000, attack: 500, dodge: 30, accuracy: 140, weakness: ["fire", "fighting", "water"], moves: [moves.tackle, moves.vine_whip, moves.growl, moves.leer], sprite: document.getElementById("geodude")},
    zubat: {name: "Zubat", maxHP: 1500, attack: 300, dodge: 40, accuracy: 120, weakness: ["rock", "electric", "psychic"], moves: [moves.scratch, moves.poison_fang, moves.growl, moves.leer], sprite: document.getElementById("zubat")},
}

let gym_pokemon = {
    bulbasaur: {name: "Bulbasaur", maxHP: 1000, attack: 200, dodge: 30, accuracy: 150, weakness: ["fire", "poison"], moves: [moves.tackle, moves.vine_whip, moves.growl, moves.leer], sprite: document.getElementById("bulbasaur")},
    charmander: {name: "Charmander", maxHP: 1300, attack: 300, dodge: 40, accuracy: 140, weakness: ["water"], moves: [moves.scratch, moves.ember, moves.growl, moves.leer], sprite: document.getElementById("charmander")},
    squirtle: {name: "Squirtle", maxHP: 1600, attack: 400, dodge: 40, accuracy: 150, weakness: ["grass"], moves: [moves.tackle, moves.water_gun, moves.sand_attack, moves.leer], sprite: document.getElementById("squirtle")},
    pikachu: {name: "Pikachu", maxHP: 1900, attack: 500, dodge: 50, accuracy: 150, weakness: ["rock"], moves: [moves.tackle, moves.thunder_bolt, moves.leer, moves.sand_attack], sprite: document.getElementById("pikachu")},
}

let character = {
    pokemon: [],
    inventory: {
        pokeball: 3,
        potion: 5,
    }
}

//------------------------------------------------------------------------------------//

function movement(event){
    let key = event.code;
    switch (key){
        case "KeyW":
            y -= unit
            break
        case "KeyS":
            y += unit
            break
        case "KeyA":
            x -= unit
            break
        case "KeyD":
            x += unit
            break
    }
}

function animation(event, p_pos){
    let key = event.code;
    let interval = setInterval(function(){
        if (key === "KeyW") {
            if (p_pos[0] > y) {
                p_pos[0] -= unit/4
                background_context.clearRect(0, 0, background_canvas.width, background_canvas.height)
                front_context.clearRect(0, 0, front_canvas.width, front_canvas.height)
                front_context.drawImage(currentMap.front, x, p_pos[0], unit*9, unit*9, 0, 0, width, height)
                background_context.drawImage(currentMap.back, x, p_pos[0], unit*9, unit*9, 0, 0, width, height)
            } else {
                clearInterval(interval)
            }
        } else if (key === "KeyS") {
            if (p_pos[0] < y) {
                p_pos[0] += unit/4
                background_context.clearRect(0, 0, background_canvas.width, background_canvas.height)
                front_context.clearRect(0, 0, front_canvas.width, front_canvas.height)
                front_context.drawImage(currentMap.front, x, p_pos[0], unit*9, unit*9, 0, 0, width, height)
                background_context.drawImage(currentMap.back, x, p_pos[0], unit*9, unit*9, 0, 0, width, height)
            } else {
                clearInterval(interval)
            }
        } else if (key === "KeyA") {
            if (p_pos[1] > x) {
                p_pos[1] -= unit/4
                background_context.clearRect(0, 0, background_canvas.width, background_canvas.height)
                front_context.clearRect(0, 0, front_canvas.width, front_canvas.height)
                front_context.drawImage(currentMap.front, p_pos[1], y, unit*9, unit*9, 0, 0, width, height)
                background_context.drawImage(currentMap.back, p_pos[1], y, unit*9, unit*9, 0, 0, width, height)
            } else {
                clearInterval(interval)
            }
        } else if (key === "KeyD") {
            if (p_pos[1] < x) {
                p_pos[1] += unit/4
                background_context.clearRect(0, 0, background_canvas.width, background_canvas.height)
                front_context.clearRect(0, 0, front_canvas.width, front_canvas.height)
                front_context.drawImage(currentMap.front, p_pos[1], y, unit*9, unit*9, 0, 0, width, height)
                background_context.drawImage(currentMap.back, p_pos[1], y, unit*9, unit*9, 0, 0, width, height)
            } else {
                clearInterval(interval)
            }
        }
    }, time)
}

function delay(func, ms) {
    let timer = 0
    return function(...args) {
    clearTimeout(timer)
    timer = setTimeout(func.bind(this, ...args), ms || 0)
    }
}

function read_collision_map(collision_map){
    var objects = {
        obstacles: [],
        fight_tiles: [],
        lab_tiles: [],
        center_tiles: [],
        mart_tiles: [],
        gym_tiles: [],
        cave_tiles: [],
        nopokemon_tiles: [],
        choice: [],
        heal_tiles: [],
        shop_tiles: [],
        fight1: [],
        fight2: [],
        fight3: [],
        fight4: [],
        finish: []
    }
    for (var line = 0; line < collision_map.length; line++) {
        for (var col = 0; col < collision_map[0].length; col++) {
            if (inLab === true){
                if (collision_map[line][col] === 1) {
                    objects.obstacles.push("" + ((line-5) * unit) + " " + ((col-5) * unit))
                }
                else if (collision_map[line][col] === 3) {
                    objects.lab_tiles.push("" + ((line-5) * unit) + " " + ((col-5) * unit))
                }
                else if (collision_map[line][col] === 4) {
                    objects.choice.push("" + ((line-5) * unit) + " " + ((col-5) * unit))
                }
            }
            else if (inCenter === true){
                if (collision_map[line][col] === 1) {
                    objects.obstacles.push("" + ((line-5) * unit) + " " + ((col-5) * unit))
                }
                else if (collision_map[line][col] === 4) {
                    objects.center_tiles.push("" + ((line-5) * unit) + " " + ((col-5) * unit))
                }
                else if (collision_map[line][col] === 2) {
                    objects.heal_tiles.push("" + ((line-5) * unit) + " " + ((col-5) * unit))
                }
            }
            else if (inShop === true){
                if (collision_map[line][col] === 1) {
                    objects.obstacles.push("" + ((line-5) * unit) + " " + ((col-5) * unit))
                }
                else if (collision_map[line][col] === 5) {
                    objects.mart_tiles.push("" + ((line-5) * unit) + " " + ((col-5) * unit))
                }
                else if (collision_map[line][col] === 2) {
                    objects.shop_tiles.push("" + ((line-5) * unit) + " " + ((col-5) * unit))
                }
            }
            else if (inGym === true){
                if (collision_map[line][col] === 1) {
                    objects.obstacles.push("" + ((line-5) * unit) + " " + ((col-5) * unit))
                }
                if (collision_map[line][col] === 6) {
                    objects.gym_tiles.push("" + ((line-5) * unit) + " " + ((col-5) * unit))
                }
                else if (collision_map[line][col] === 2) {
                    objects.fight_tiles.push("" + ((line-5) * unit) + " " + ((col-5) * unit))
                }
            }
            else if (inCave === true){
                if (collision_map[line][col] === 1) {
                    objects.obstacles.push("" + ((line-5) * unit) + " " + ((col-5) * unit))
                }
                else if (collision_map[line][col] === 3) {
                    objects.finish.push("" + ((line-5) * unit) + " " + ((col-5) * unit))
                }
                else if (collision_map[line][col] === 2) {
                    objects.fight_tiles.push("" + ((line-5) * unit) + " " + ((col-5) * unit))
                }
                else if (collision_map[line][col] === 7) {
                    objects.cave_tiles.push("" + ((line-5) * unit) + " " + ((col-5) * unit))
                }
            }
            else {
                if (collision_map[line][col] === 1) {
                    objects.obstacles.push("" + ((line-4) * unit) + " " + ((col-4) * unit))
                }
                
                else if (collision_map[line][col] === 2) {
                    objects.fight_tiles.push("" + ((line-4) * unit) + " " + ((col-4) * unit))
                }
                else if (collision_map[line][col] === 3) {
                    objects.lab_tiles.push("" + ((line-4) * unit) + " " + ((col-4) * unit))
                }
                else if (collision_map[line][col] === 4) {
                    objects.center_tiles.push("" + ((line-4) * unit) + " " + ((col-4) * unit))
                }
                else if (collision_map[line][col] === 5) {
                    objects.mart_tiles.push("" + ((line-4) * unit) + " " + ((col-4) * unit))
                }
                else if (collision_map[line][col] === 6) {
                    objects.gym_tiles.push("" + ((line-4) * unit) + " " + ((col-4) * unit))
                }
                else if (collision_map[line][col] === 7) {
                    objects.cave_tiles.push("" + ((line-4) * unit) + " " + ((col-4) * unit))
                }
                else if (collision_map[line][col] === 8) {
                    objects.nopokemon_tiles.push("" + ((line-4) * unit) + " " + ((col-4) * unit))
                }
            }
        }
    }
    return objects
}

function collision(processed_collision_map, prev_pos, event){
    if (processed_collision_map.obstacles.includes("" + y + " " + x) === true) {
        y = prev_pos[0]
        x = prev_pos[1]
    }
    else if (processed_collision_map.fight_tiles.includes("" + y + " " + x) === true) {
        inGrass = true
        let random = Math.floor(Math.random()*100) + 1
        if (inGym){
            fight(event)
        }
        else if (random <= 10 && !dead){
            fight(event)
        }
    }
    else if (processed_collision_map.lab_tiles.includes("" + y + " " + x) === true){
        if (inLab === false){
            currentMap = lab
            x = lab.startpos[0]
            y = lab.startpos[1]
            p_pos = [lab.startpos[0], lab.startpos[1]]
            inLab = !inLab
        }
        else {
            currentMap = mapa
            x = unit*15
            y = unit*11 
            p_pos = [unit*15, unit*10]
            inLab = !inLab
        }
    }
    else if (processed_collision_map.choice.includes("" + y + " " + x) === true && !labDone){
        escolha(event)
        pokeChoice = true
    }
    else if (processed_collision_map.center_tiles.includes("" + y + " " + x) === true){
        if (inCenter === false){
            currentMap = pokecenter
            x = lab.startpos[0]
            y = lab.startpos[1]
            p_pos = [lab.startpos[0], lab.startpos[1]]
            inCenter = !inCenter
        }
        else {
            currentMap = mapa
            x = unit*50
            y = unit*39 
            p_pos = [unit*50, unit*39]
            inCenter = !inCenter
        }   
    }
    else if (processed_collision_map.mart_tiles.includes("" + y + " " + x) === true){
        if (inShop === false){
            currentMap = pokemart
            x = lab.startpos[0]
            y = lab.startpos[1]
            p_pos = [lab.startpos[0], lab.startpos[1]]
            inShop = !inShop
        }
        else {
            currentMap = mapa
            x = unit*69
            y = unit*39 
            p_pos = [unit*69, unit*39]
            inShop = !inShop
        }   
    }
    else if (inCenter === true && processed_collision_map.heal_tiles.includes("" + y + " " + x)){
        console.log("aaaaa")
        heal()
    }
    else if (inShop === true && processed_collision_map.shop_tiles.includes("" + y + " " + x)){
        character.inventory.potion = 3
        let escolha_canvas = document.getElementById("choice")
        let escolha_context = escolha_canvas.getContext("2d")
        let choice2 = document.getElementById("choice2")
        let choice2c = choice2.getContext("2d")
        escolha_context.fillStyle = "rgba(255, 255, 255, 1)"
        escolha_context.fillRect(map_unit*1, map_unit*3, map_unit*7, map_unit*1)
        choice2c.font = "24px Verdana";
        choice2c.fillStyle = "black"
        $("#choice").fadeIn(500)
        $("#choice2").fadeIn(500)
        choice2c.fillText("As tuas potions foram restauradas!", map_unit*1.3+map_unit/10, map_unit*3+map_unit/1.6)
        setTimeout(function(){ talking=false; escolha_context.clearRect(0,0,width,height); choice2c.clearRect(0,0,width,height)}, 2300);
    }
    else if (processed_collision_map.gym_tiles.includes("" + y + " " + x) === true){
        if (inGym === false){
            currentMap = gym
            x = unit*2
            y = unit*40
            p_pos = [lab.startpos[0], lab.startpos[1]]
            inGym = !inGym
        }
        else {
            currentMap = mapa
            x = unit*63
            y = unit*39 
            p_pos = [unit*59, unit*39]
            inGym = !inGym
        }   
    }
    else if (processed_collision_map.cave_tiles.includes("" + y + " " + x) === true){
        let cav = document.getElementById("cavelight")
        let cavc = cav.getContext("2d")
        if (inCave === false && !dead){
            cavc.drawImage(document.getElementById("light"), 0, 0, width, height)
            currentMap = cave
            x = unit*19
            y = unit*27
            p_pos = [x, y]
            inCave = !inCave
        }
        else if (inCave === false && dead) {
            let escolha_canvas = document.getElementById("choice")
            let escolha_context = escolha_canvas.getContext("2d")
            let choice2 = document.getElementById("choice2")
            let choice2c = choice2.getContext("2d")
            escolha_context.fillStyle = "rgba(255, 255, 255, 1)"
            escolha_context.fillRect(map_unit*1, map_unit*3, map_unit*7, map_unit*1)
            choice2c.font = "18px Verdana";
            choice2c.fillStyle = "black"
            $("#choice").fadeIn(500)
            $("#choice2").fadeIn(500)
            choice2c.fillText("É demasiado perigoso entrar sem Pokemons!", map_unit*1.3+map_unit/10, map_unit*3+map_unit/1.6)
            setTimeout(function(){ talking=false; escolha_context.clearRect(0,0,width,height); choice2c.clearRect(0,0,width,height)}, 2300);
            y = prev_pos[0]
            x = prev_pos[1]
        }
        else {
            cavc.clearRect(0,0,width,height)
            currentMap = mapa
            x = unit*40
            y = unit*5
            p_pos = [unit*59, unit*39]
            inCave = !inCave
        }   
    }
    else if (inCave === true && processed_collision_map.finish.includes("" + y + " " + x) === true && fourdone === true){
        let data2 = Date.now()
        let data3 = data2-data1
        let tempo = countTime(data3)
        if (sessionStorage.getItem("Current User") !== "username"){
            let user = JSON.parse(localStorage.getItem(sessionStorage.getItem("Current User")))
            if (user[1] === null){
                user[1] = tempo[1]
            }
            else if (user[1] > tempo[1]){
                user[1] = tempo[1]
            }
            user = JSON.stringify(user)
            localStorage.setItem(sessionStorage.getItem("Current User"), user)
        }
        let escolha_canvas = document.getElementById("choice")
        let escolha_context = escolha_canvas.getContext("2d")
        let choice2 = document.getElementById("choice2")
        let choice2c = choice2.getContext("2d")
        escolha_context.fillStyle = "rgba(255, 255, 255, 1)"
        escolha_context.fillRect(map_unit*1, map_unit*3, map_unit*7, map_unit*1)
        choice2c.font = "29px Verdana";
        choice2c.fillStyle = "black"
        $("#choice").fadeIn(500)
        $("#choice2").fadeIn(500)
        choice2c.fillText("Acabaste em " + tempo[0] + " minutos!", map_unit*1.3+map_unit/10, map_unit*3+map_unit/1.6)
        setTimeout(function(){ talking=false; escolha_context.clearRect(0,0,width,height); choice2c.clearRect(0,0,width,height)}, 2300);
    }
    else if (processed_collision_map.nopokemon_tiles.includes("" + y + " " + x) === true && !labDone){
        talking = true
        let escolha_canvas = document.getElementById("choice")
        let escolha_context = escolha_canvas.getContext("2d")
        let choice2 = document.getElementById("choice2")
        let choice2c = choice2.getContext("2d")
        escolha_context.fillStyle = "white"
        escolha_context.fillRect(map_unit*2, map_unit*3, map_unit*5, map_unit*1)
        choice2c.font = "25px Verdana";
        choice2c.fillText("Ainda não tens Pokemon!", map_unit*2+map_unit/10, map_unit*3+map_unit/1.6)
        y = prev_pos[0]
        x = prev_pos[1]
        setTimeout(function(){ talking=false; escolha_context.clearRect(0,0,width,height); choice2c.clearRect(0,0,width,height)}, 2300);
    }
    if (processed_collision_map.obstacles.includes("" + y + " " + x) === false && processed_collision_map.fight_tiles.includes("" + y + " " + x) === false){
        inGrass = false
    }
}

function character_animation(event){
    let key = event.code;
    let spriteW = 22
    let spriteH = 27
    let step = 1
    let interval = setInterval(function(){
        if (key === "KeyW") {
            let animationH = spriteH*3
            if (step < 3) {
                character_context.clearRect(0, 0, character_canvas.width, character_canvas.height)
                if (!inGrass || inCave){
                character_context.drawImage(character_map, Math.floor(step)*spriteW, animationH, 22, 27, map_unit*4, map_unit*4-(map_unit*(27/22)-map_unit), map_unit, map_unit*(27/22));
                }
                else if (!inCave){
                    character_context.drawImage(character_grass, Math.floor(step)*spriteW, animationH, 22, 27, map_unit*4, map_unit*4-(map_unit*(27/22)-map_unit), map_unit, map_unit*(27/22));
                }
                step += 0.25
            } else {
                clearInterval(interval)
                character_context.clearRect(0, 0, character_canvas.width, character_canvas.height)
                if (!inGrass || inCave){
                    character_context.drawImage(character_map, 0, animationH, 22, 27, map_unit*4, map_unit*4-(map_unit*(27/22)-map_unit), map_unit, map_unit*(27/22));
                }
                else if (!inCave){
                    character_context.drawImage(character_grass, 0, animationH, 22, 27, map_unit*4, map_unit*4-(map_unit*(27/22)-map_unit), map_unit, map_unit*(27/22));
                }
            }
        } else if (key === "KeyS") {
            let animationH = spriteH*0
            if (step < 3) {
                character_context.clearRect(0, 0, character_canvas.width, character_canvas.height)
                if (!inGrass || inCave){
                character_context.drawImage(character_map, Math.floor(step)*spriteW, animationH, 22, 27, map_unit*4, map_unit*4-(map_unit*(27/22)-map_unit), map_unit, map_unit*(27/22));
                }
                else if (!inCave) {
                    character_context.drawImage(character_grass, Math.floor(step)*spriteW, animationH, 22, 27, map_unit*4, map_unit*4-(map_unit*(27/22)-map_unit), map_unit, map_unit*(27/22));
                }
                step += 0.25
            } else {
                clearInterval(interval)
                character_context.clearRect(0, 0, character_canvas.width, character_canvas.height)
                if (!inGrass || inCave){
                    character_context.drawImage(character_map, 0, animationH, 22, 27, map_unit*4, map_unit*4-(map_unit*(27/22)-map_unit), map_unit, map_unit*(27/22));
                }
                else if (!inCave){
                    character_context.drawImage(character_grass, 0, animationH, 22, 27, map_unit*4, map_unit*4-(map_unit*(27/22)-map_unit), map_unit, map_unit*(27/22));
                }            }
        } else if (key === "KeyA") {
            let animationH = spriteH*1
            if (step < 3) {
                character_context.clearRect(0, 0, character_canvas.width, character_canvas.height)
                if (!inGrass || inCave){
                character_context.drawImage(character_map, Math.floor(step)*spriteW, animationH, 22, 27, map_unit*4, map_unit*4-(map_unit*(27/22)-map_unit), map_unit, map_unit*(27/22));
                }
                else if (!inCave) {                    
                    character_context.drawImage(character_grass, Math.floor(step)*spriteW, animationH, 22, 27, map_unit*4, map_unit*4-(map_unit*(27/22)-map_unit), map_unit, map_unit*(27/22));
                }
                step += 0.25
            } else {
                clearInterval(interval)
                character_context.clearRect(0, 0, character_canvas.width, character_canvas.height)
                if (!inGrass || inCave){
                    character_context.drawImage(character_map, 0, animationH, 22, 27, map_unit*4, map_unit*4-(map_unit*(27/22)-map_unit), map_unit, map_unit*(27/22));
                }
                else if (!inCave){
                    character_context.drawImage(character_grass, 0, animationH, 22, 27, map_unit*4, map_unit*4-(map_unit*(27/22)-map_unit), map_unit, map_unit*(27/22));
                }            }
        } else if (key === "KeyD") {
            let animationH = spriteH*2
            if (step < 3) {
                character_context.clearRect(0, 0, character_canvas.width, character_canvas.height)
                if (!inGrass || inCave){
                character_context.drawImage(character_map, Math.floor(step)*spriteW, animationH, 22, 27, map_unit*4, map_unit*4-(map_unit*(27/22)-map_unit), map_unit, map_unit*(27/22));
                }
                else if (!inCave) {                    
                    character_context.drawImage(character_grass, Math.floor(step)*spriteW, animationH, 22, 27, map_unit*4, map_unit*4-(map_unit*(27/22)-map_unit), map_unit, map_unit*(27/22));
                }
                step += 0.25
            } else {
                clearInterval(interval)
                character_context.clearRect(0, 0, character_canvas.width, character_canvas.height)
                if (!inGrass || inCave){
                    character_context.drawImage(character_map, 0, animationH, 22, 27, map_unit*4, map_unit*4-(map_unit*(27/22)-map_unit), map_unit, map_unit*(27/22));
                }
                else if (!inCave){
                    character_context.drawImage(character_grass, 0, animationH, 22, 27, map_unit*4, map_unit*4-(map_unit*(27/22)-map_unit), map_unit, map_unit*(27/22));
                }            }
        }
    }, time)
    
}

function escolha(event){
    let escolha_canvas = document.getElementById("choice")
    let escolha_context = escolha_canvas.getContext("2d")
    let choice2 = document.getElementById("choice2")
    let choice2c = choice2.getContext("2d")
    choice2c.fillStyle  = "rgba(255, 255, 255, 0.3)";
    if (doing === true){
        escolha_context.imageSmoothingEnabled = false;
        escolha_context.clearRect(0,0,width,height)
        escolha_context.fillStyle = "gray"
        escolha_context.fillRect(map_unit*3, map_unit*3, map_unit, map_unit)
        escolha_context.fillRect(map_unit*4, map_unit*3, map_unit, map_unit)
        escolha_context.fillRect(map_unit*5, map_unit*3, map_unit, map_unit)
        escolha_context.drawImage(document.getElementById("charmander"), map_unit*3, map_unit*3, map_unit, map_unit)
        escolha_context.drawImage(document.getElementById("squirtle"), map_unit*4, map_unit*3, map_unit, map_unit)
        escolha_context.drawImage(document.getElementById("bulbasaur"), map_unit*5, map_unit*3, map_unit, map_unit)
        choice2c.lineWidth = 5
        choice2c.fillRect(map_unit*3+index*map_unit, map_unit*3, map_unit, map_unit)
    }
    let key = event.code
    switch (key){
        case "KeyA":
            if (index > 0){
                index -= 1
                doing = false
                choice2c.clearRect(0,0,width,height)
                choice2c.fillRect(map_unit*3+index*map_unit, map_unit*3, map_unit, map_unit)
                
            }
            break
        case "KeyD":
            if (index < 2){
                index += 1
                doing = false
                choice2c.clearRect(0,0,width,height)
                choice2c.fillRect(map_unit*3+index*map_unit, map_unit*3, map_unit, map_unit)
                
            }
            break
        case "Space":
            choice2c.clearRect(0,0,width,height)
            escolha_context.clearRect(0,0,width,height)
            let temp = Object.assign({}, pokemonlist[index]);
            character.pokemon.push(temp)
            character.pokemon[0].hp = character.pokemon[0].maxHP
            if (character.pokemon[0].name === "Charmander"){
                character.pokemon[0].sprite = document.getElementById("charmanderp")
            }
            else if (character.pokemon[0].name === "Squirtle"){
                character.pokemon[0].sprite = document.getElementById("squirtlep")
            }
            else if (character.pokemon[0].name === "Bulbasaur"){
                character.pokemon[0].sprite = document.getElementById("bulbasaurp")
            }
            character.current_pokemon = character.pokemon[0]
            pokeChoice = false
            labDone = true
            break
    }
}

function heal(){
    console.log("a")
    let escolha_canvas = document.getElementById("choice")
    let escolha_context = escolha_canvas.getContext("2d")
    let choice2 = document.getElementById("choice2")
    let choice2c = choice2.getContext("2d")
    escolha_context.fillStyle = "rgba(255, 255, 255, 1)"
    escolha_context.fillRect(map_unit*1, map_unit*3, map_unit*7, map_unit*1)
    choice2c.font = "24px Verdana";
    choice2c.fillStyle = "black"
    for (let i = 0; i < character.pokemon.length; i++){
        character.pokemon[i].hp = character.pokemon[i].maxHP
    }
    character.current_pokemon.hp = character.pokemon[current_pokemon_index].maxHP
    $("#choice").fadeIn(500)
    $("#choice2").fadeIn(500)
    choice2c.fillText("Os teus pokemons foram curados!", map_unit*1.3+map_unit/10, map_unit*3+map_unit/1.6)
    setTimeout(function(){ talking=false; escolha_context.clearRect(0,0,width,height); choice2c.clearRect(0,0,width,height)}, 2300);
}

function fight(event){
    let key = event.code
    let fight = document.getElementById("fight")
    let fight2 = document.getElementById("fight2")
    let fight3 = document.getElementById("fight3")
    let fight4 = document.getElementById("fight4")
    let fightc = fight.getContext("2d")
    let fight2c = fight2.getContext("2d")
    let fight3c = fight3.getContext("2d")
    let fight4c = fight4.getContext("2d")
    let choice = document.getElementById("choice")
    let choicec = choice.getContext("2d")
    let choice2 = document.getElementById("choice2")
    let choice2c = choice2.getContext("2d")

    if (!fighting){
        fighting = true
        if (inGym){
            enemy =  Object.assign({}, gymlist[Math.floor(Math.random()*gymlist.length)])
            enemy.hp = enemy.maxHP
        }
        else if (inCave){
            $("#cavelight").fadeOut(500)
            enemy =  Object.assign({}, cavelist[Math.floor(Math.random()*cavelist.length)])
            enemy.hp = enemy.maxHP
        }
        let spriteH = 27
        let animationH = spriteH*2

        $("#fight").fadeOut(1)
        $("#fight2").fadeOut(1)
        $("#fight3").fadeOut(1)
        $("#fight4").fadeOut(1)

        fightc.imageSmoothingEnabled = false
        fight2c.imageSmoothingEnabled = false
        fight3c.imageSmoothingEnabled = false
        fight4c.imageSmoothingEnabled = false

        fightc.drawImage(document.getElementById("fightground"), 0, 0, width, height)
        fight2c.drawImage(document.getElementById("fighta"), map_unit+map_unit/4, map_unit*2, width-map_unit*2, height-map_unit*5)
        $("#fight2").slideDown(300).delay(500).slideUp(300)
        $("#fight").delay(300).fadeIn(500)
        fight3c.drawImage(enemy.sprite, map_unit*5.5, map_unit*4, map_unit, map_unit)
        fight3c.drawImage(character_map, 0, animationH, 22, 27, map_unit*0, map_unit*3.3, map_unit+map_unit/2, map_unit*(27/22)+map_unit/2)
        fight3c.drawImage(character.current_pokemon.sprite,map_unit*2.5,map_unit*4,map_unit,map_unit)
        fight4c.fillStyle = "red"
        fight4c.fillRect(map_unit*5.5, map_unit*3.5, map_unit, map_unit/6)
        fight4c.fillRect(map_unit*2.5, map_unit*3.5, map_unit, map_unit/6)
        fight4c.fillStyle = "green"
        fight4c.fillRect(map_unit*5.5, map_unit*3.5, map_unit*enemy.hp/enemy.maxHP, map_unit/6)
        fight4c.fillRect(map_unit*2.5, map_unit*3.5, map_unit*character.current_pokemon.hp/character.current_pokemon.maxHP, map_unit/6) 
        $("#fight3").delay(600).fadeIn(500)
        $("#fight4").delay(600).fadeIn(500)
        choicec.font = "29px Verdana";
        choicec.fillStyle = "rgba(255, 255, 255, 0.6)"
        choice2c.fillStyle  = "rgba(255, 255, 255, 0.3)";
        $("#choice2").fadeOut(1)
        $("#choice").fadeOut(1)
        choicec.fillRect(0,map_unit*6+map_unit*1.3, width, map_unit*1.8)
        choicec.fillStyle = "black"
        choicec.fillRect(map_unit/2+map_unit*0.5, map_unit*6+map_unit*1.5, map_unit*3, map_unit/1.5)
        choicec.fillRect(map_unit/2+map_unit*4.5, map_unit*6+map_unit*1.5, map_unit*3, map_unit/1.5)
        choicec.fillRect(map_unit/2+map_unit*0.5, map_unit*6+map_unit*2.2, map_unit*3, map_unit/1.5)
        choicec.fillRect(map_unit/2+map_unit*4.5, map_unit*6+map_unit*2.2, map_unit*3, map_unit/1.5)
        choicec.fillStyle = "white"
        choicec.fillText("Fight!", map_unit/2+map_unit*1.4, map_unit*6+map_unit*2)
        choicec.fillText("Pokemon", map_unit/2+map_unit*5.1, map_unit*6+map_unit*2)
        choicec.fillText("Bag", map_unit/2+map_unit*1.5 , map_unit*6+map_unit*2.7)
        choicec.fillText("Run", map_unit/2+map_unit*5.5, map_unit*6+map_unit*2.7)
        choice2c.fillRect(map_unit/2+map_unit*0.5, map_unit*6+map_unit*1.5, map_unit*3, map_unit/1.5)

        $("#choice").fadeIn(300)
        $("#choice2").fadeIn(300)
    }
    else {
        let conf = false
        
        switch (key){
            case "KeyW":
                if (findex === 3 || findex === 4){
                    findex -= 2
                }
                break            
            case "KeyS":
                if (findex === 1 || findex === 2){
                    findex += 2
                }
                break
            case "KeyA":
                if (findex === 2 || findex === 4){
                    findex -= 1
                }
                break
            case "KeyD":
                if (findex === 1 || findex == 3){
                    findex += 1
                }
                break
            case "Space":
                conf = true
                if (menu === 0){
                    menu = findex
                    if (menu != 4){
                        break
                    }
                }
                if (menu === 1){
                    let allyattack = character.current_pokemon.moves[findex-1]
                    let enemyattack = enemy.moves[Math.floor(Math.random()*4)]
                    fight4c.clearRect(0,0,width,height)
                    fight4c.font = "29px Verdana";
                    fight4c.fillStyle = "rgba(255, 255, 255, 0.6)"
                    fight4c.fillRect(0,0,width,map_unit*1.9)
                    var audio = document.getElementById("punch")
                    audio.play()
                    if (allyattack.effects === null){
                        if (Math.floor(Math.random()*character.current_pokemon.accuracy*allyattack.accuracy)+1 > enemy.dodge){
                            if (enemy.weakness.includes(allyattack.type)){
                                enemy.hp -= allyattack.damage*character.current_pokemon.attack*1.5
                            }
                            else {
                                enemy.hp -= allyattack.damage*character.current_pokemon.attack
                            }
                            fight4c.fillStyle = "black"
                            fight4c.fillText(""+character.current_pokemon.name + " usou "+allyattack.name+"!", map_unit*2, map_unit/1.5)
                        }
                        else{
                            fight4c.fillStyle = "black"
                            fight4c.fillText(""+character.current_pokemon.name + " falhou!", map_unit*2, map_unit/1.5)
                        }
                    }
                    else {
                        if (Math.floor(Math.random()*character.current_pokemon.accuracy*allyattack.accuracy)+1 > enemy.dodge){
                            if (allyattack.effects[0] === "damage"){
                                if (enemy.attack > 10){
                                    enemy.attack -= allyattack.effects[1]
                                }
                                else {
                                    enemy.attack = 10
                                }
                            }
                            else if (allyattack.effects[0] === "dodge"){
                                if (enemy.dodge > 0){
                                    enemy.dodge -= allyattack.effects[1]
                                }
                                else {
                                    enemy.dodge = 0
                                }
                            }
                            else if (allyattack.effects[0] === "accuracy"){
                                if (enemy.accuracy > 10){
                                    enemy.accuracy -= allyattack.effects[1]
                                }
                                else {
                                    enemy.accuracy = 10
                                }
                            }
                            fight4c.fillStyle = "black"
                            fight4c.fillText(""+character.current_pokemon.name + " usou "+allyattack.name+"!", map_unit*2, map_unit/1.5)
                        }
                        else {
                            fight4c.fillStyle = "black"
                            fight4c.fillText(""+character.current_pokemon.name + " falhou!", map_unit*2, map_unit/1.5)
                        }
                    }
                    if (enemy.hp <= 0){
                        fightaudio.load()
                        if (inGym === true){
                            if (onedone === false && twodone === false && threedone === false && fourdone === false){
                                onedone = true
                            }
                            else if (onedone === true && twodone === false && threedone === false && fourdone === false){
                                twodone = true
                            }
                            else if (onedone === true && twodone === true && threedone === false && fourdone === false){
                                threedone = true
                            }
                            else if (onedone === true && twodone === true && threedone === true && fourdone === false){
                                fourdone = true
                            }
                        }
                        if (inGym){
                            enemy =  Object.assign({}, gymlist[Math.floor(Math.random()*gymlist.length)])
                            enemy.hp = enemy.maxHP
                        }
                        else if (inCave){
                            $("#cavelight").fadeIn(500)
                            enemy =  Object.assign({}, cavelist[Math.floor(Math.random()*cavelist.length)])
                            enemy.hp = enemy.maxHP 
                        }
                        else {
                        enemy = pokemonlist[Math.floor(Math.random()*pokemonlist.length)]
                        enemy.hp = enemy.maxHP
                        }
                        character.pokemon[current_pokemon_index].maxHP *= 1.5
                        character.pokemon[current_pokemon_index].attack *= 1.1
                        character.pokemon[current_pokemon_index].dodge *= 1.5
                        character.pokemon[current_pokemon_index].accuracy += 10
                        character.pokemon[current_pokemon_index].hp = character.current_pokemon.hp*2
                        if (character.pokemon[current_pokemon_index].hp > character.pokemon[current_pokemon_index].maxHP){
                            character.pokemon[current_pokemon_index].hp = character.pokemon[current_pokemon_index].maxHP
                        }
                        let objectpoke = Object.assign({}, character.pokemon[current_pokemon_index])
                        character.current_pokemon = objectpoke
                        let fight5 = document.getElementById("fight5")
                        let fight5c = fight5.getContext("2d")
                        $("#fight5").fadeOut(1)
                        fight5c.drawImage(document.getElementById("win"), 0, map_unit*2, width, map_unit*3)
                        $("#fight5").fadeIn(500)
                        fighting = false
                        menu = 0
                        $("#fight").delay(500).fadeOut(500)
                        $("#fight2").delay(500).fadeOut(500)
                        $("#fight3").delay(500).fadeOut(500)
                        $("#fight4").delay(500).fadeOut(500)
                        $("#choice").delay(500).fadeOut(500)
                        $("#choice2").delay(500).fadeOut(500)
                        $("#fight5").delay(500).fadeOut(500)
                        setTimeout(function(){
                            fightc.clearRect(0,0,width,height)
                            fight2c.clearRect(0,0,width,height)
                            fight3c.clearRect(0,0,width,height)
                            fight4c.clearRect(0,0,width,height)
                            choicec.clearRect(0,0,width,height)
                            choice2c.clearRect(0,0,width,height)
                            fight5c.clearRect(0,0,width,height)
                        },1000)   
                    }
                    if (enemyattack.effects === null){
                        if (Math.floor(Math.random()*enemy.accuracy*enemyattack.accuracy)+1 > character.current_pokemon.dodge){
                            if (character.current_pokemon.weakness.includes(enemyattack.type)){
                                character.current_pokemon.hp -= enemyattack.damage*enemy.attack*1.5
                            }
                            else {
                                character.current_pokemon.hp -= enemyattack.damage*enemy.attack
                            }
                            fight4c.fillStyle = "black"
                            fight4c.fillText(""+enemy.name + " usou "+enemyattack.name+"!", map_unit*2, map_unit*1.5)
                        }
                        else{
                            fight4c.fillStyle = "black"
                            fight4c.fillText(""+enemy.name + " falhou!", map_unit*2, map_unit*1.5)
                        }
                    }
                    else {
                        if (Math.floor(Math.random()*enemy.accuracy*enemyattack.accuracy)+1 > character.current_pokemon.dodge){
                            if (enemyattack.effects[0] === "damage"){
                                if (character.current_pokemon.attack > 10){
                                    character.current_pokemon.attack -= enemyattack.effects[1]
                                }
                                else {
                                    character.current_pokemon.attack = 10
                                }
                            }
                            else if (enemyattack.effects[0] === "dodge"){
                                if (character.current_pokemon.dodge > 0){
                                    character.current_pokemon.dodge -= enemyattack.effects[1]
                                }
                                else {
                                    character.current_pokemon.dodge = 0
                                }
                            }
                            else if (enemyattack.effects[0] === "accuracy"){
                                if (character.current_pokemon.accuracy > 10){
                                    character.current_pokemon.accuracy -= enemyattack.effects[1]
                                }
                                else {
                                    character.current_pokemon.accuracy = 10
                                }
                            }
                            fight4c.fillStyle = "black"
                            fight4c.fillText(""+enemy.name + " usou "+enemyattack.name+"!", map_unit*2, map_unit*1.5)
                        }
                        else {
                            fight4c.fillStyle = "black"
                            fight4c.fillText(""+enemy.name + " falhou!", map_unit*2, map_unit*1.5)
                        }
                    }
                    if (character.current_pokemon.hp <= 0){
                        fightaudio.load()
                        let possible = false
                        for (let i = 0; i < character.pokemon.length; i++){
                            if (character.pokemon[i].hp > 0){
                                possible = true
                                character.current_pokemon = character.pokemon[i]
                                fight3c.clearRect(map_unit*2.5,map_unit*4,map_unit,map_unit)
                                fight3c.drawImage(character.current_pokemon.sprite, map_unit*2.5,map_unit*4,map_unit,map_unit)
                            }
                        }
                        if (!possible){
                            dead = true
                            if (inGym){
                                enemy =  Object.assign({}, gymlist[Math.floor(Math.random()*gymlist.length)])
                                enemy.hp = enemy.maxHP
                            }
                            else if (inCave === true){
                                $("#cavelight").fadeIn(500)
                                enemy =  Object.assign({}, cavelist[Math.floor(Math.random()*cavelist.length)])
                                enemy.hp = enemy.maxHP 
                            }
                            else {
                            enemy = pokemonlist[Math.floor(Math.random()*pokemonlist.length)]
                            enemy.hp = enemy.maxHP
                            } 
                            let fight5 = document.getElementById("fight5")
                            let fight5c = fight5.getContext("2d")
                            $("#fight5").fadeOut(1)
                            fight5c.drawImage(document.getElementById("lose"), 0, map_unit*2, width, map_unit*3)
                            $("#fight5").fadeIn(500)
                            fighting = false
                            menu = 0
                            $("#fight").delay(500).fadeOut(500)
                            $("#fight2").delay(500).fadeOut(500)
                            $("#fight3").delay(500).fadeOut(500)
                            $("#fight4").delay(500).fadeOut(500)
                            $("#choice").delay(500).fadeOut(500)
                            $("#choice2").delay(500).fadeOut(500)
                            $("#fight5").delay(500).fadeOut(500)
                            setTimeout(function(){
                                fightc.clearRect(0,0,width,height)
                                fight2c.clearRect(0,0,width,height)
                                fight3c.clearRect(0,0,width,height)
                                fight4c.clearRect(0,0,width,height)
                                choicec.clearRect(0,0,width,height)
                                choice2c.clearRect(0,0,width,height)
                                fight5c.clearRect(0,0,width,height)
                            },1000)   
                    }
                }
                    fight4c.fillStyle = "red"
                    fight4c.fillRect(map_unit*5.5, map_unit*3.5, map_unit, map_unit/6)
                    fight4c.fillRect(map_unit*2.5, map_unit*3.5, map_unit, map_unit/6)
                    fight4c.fillStyle = "green"
                    fight4c.fillRect(map_unit*5.5, map_unit*3.5, map_unit*enemy.hp/enemy.maxHP, map_unit/6)
                    fight4c.fillRect(map_unit*2.5, map_unit*3.5, map_unit*character.current_pokemon.hp/character.current_pokemon.maxHP, map_unit/6) 
                }
                else if (menu === 2){
                    if (findex-1 < character.pokemon.length){
                        character.current_pokemon = Object.assign({}, character.pokemon[findex-1])
                        current_pokemon_index = findex-1
                        fight3c.clearRect(map_unit*2.5,map_unit*4,map_unit,map_unit)
                        fight3c.drawImage(character.current_pokemon.sprite, map_unit*2.5,map_unit*4,map_unit,map_unit)
                    }
                }
                else if (menu === 3){
                    if (findex === 1 && character.pokemon.length >= 4){
                        fight4c.clearRect(0,0,width,height)
                        fight4c.font = "29px Verdana";
                        fight4c.fillStyle = "rgba(255, 255, 255, 0.6)"
                        fight4c.fillRect(0,0,width,map_unit*1.9)
                        fight4c.fillStyle = "black"
                        fight4c.fillText("Não podes ter mais pokemons!", map_unit*2, map_unit/1.5)
                    }
                    else if (findex === 1 && character.inventory.pokeball < 0){
                        fight4c.clearRect(0,0,width,height)
                        fight4c.font = "29px Verdana";
                        fight4c.fillStyle = "rgba(255, 255, 255, 0.6)"
                        fight4c.fillRect(0,0,width,map_unit*1.9)
                        fight4c.fillStyle = "black"
                        fight4c.fillText("Não tens pokebolas!", map_unit*2, map_unit/1.5)
                    }
                    else if (findex === 1 && inGym === true){
                        fight4c.clearRect(0,0,width,height)
                        fight4c.font = "29px Verdana";
                        fight4c.fillStyle = "rgba(255, 255, 255, 0.6)"
                        fight4c.fillRect(0,0,width,map_unit*1.9)
                        fight4c.fillStyle = "black"
                        fight4c.fillText("Não podes capturar esse pokemon!", map_unit*2, map_unit/1.5)
                    }
                    else if (findex === 1 && character.inventory.pokeball > 0 && character.pokemon.length < 4){
                        let random = Math.floor(Math.random()*100)+1
                        console.log(random, enemy.hp/enemy.maxHP*100)
                        if (random > enemy.hp/enemy.maxHP*100){
                            enemy.hp = enemy.maxHP
                            let capture = Object.assign({}, enemy)
                            character.pokemon.push(capture)
                            let sprite = enemy.name.toLocaleLowerCase() + "p"
                            character.pokemon[character.pokemon.length-1].sprite = document.getElementById(sprite)
                            fight4c.clearRect(0,0,width,height)
                            fight4c.font = "29px Verdana";
                            fight4c.fillStyle = "rgba(255, 255, 255, 0.6)"
                            fight4c.fillRect(0,0,width,map_unit*1.9)
                            fight4c.fillStyle = "black"
                            fight4c.fillText("Capturaste um " + enemy.name + "!", map_unit*2, map_unit/1.5)
                            character.inventory.pokeball -= 1

                            enemy = pokemonlist[Math.floor(Math.random()*pokemonlist.length)]
                            enemy.hp = enemy.maxHP  
                            let fight5 = document.getElementById("fight5")
                            let fight5c = fight5.getContext("2d")
                            $("#fight5").fadeOut(1)
                            fight5c.drawImage(document.getElementById("win"), 0, map_unit*2, width, map_unit*3)
                            $("#fight5").fadeIn(500)
                            fighting = false
                            menu = 0
                            $("#fight").delay(500).fadeOut(500)
                            $("#fight2").delay(500).fadeOut(500)
                            $("#fight3").delay(500).fadeOut(500)
                            $("#fight4").delay(500).fadeOut(500)
                            $("#choice").delay(500).fadeOut(500)
                            $("#choice2").delay(500).fadeOut(500)
                            $("#fight5").delay(500).fadeOut(500)
                            setTimeout(function(){
                                fightc.clearRect(0,0,width,height)
                                fight2c.clearRect(0,0,width,height)
                                fight3c.clearRect(0,0,width,height)
                                fight4c.clearRect(0,0,width,height)
                                choicec.clearRect(0,0,width,height)
                                choice2c.clearRect(0,0,width,height)
                                fight5c.clearRect(0,0,width,height)
                            },1000)   
                        }
                        else {
                            fight4c.clearRect(0,0,width,height)
                            fight4c.font = "29px Verdana";
                            fight4c.fillStyle = "rgba(255, 255, 255, 0.6)"
                            fight4c.fillRect(0,0,width,map_unit*1.9)
                            fight4c.fillStyle = "black"
                            fight4c.fillText("Não conseguiste capturar o " + enemy.name + "!", map_unit*2, map_unit/1.5)
                            menu = 0
                            choicec.font = "29px Verdana";
                            choicec.fillStyle = "rgba(255, 255, 255, 0.6)"
                            choice2c.fillStyle  = "rgba(255, 255, 255, 0.3)";
                            $("#choice2").fadeOut(1)
                            $("#choice").fadeOut(1)
                            choicec.clearRect(0,0,width,height)
                            choice2c.clearRect(0,0,width,height)
                            choicec.fillRect(0,map_unit*6+map_unit*1.3, width, map_unit*1.8)
                            choicec.fillStyle = "black"
                            choicec.fillRect(map_unit/2+map_unit*0.5, map_unit*6+map_unit*1.5, map_unit*3, map_unit/1.5)
                            choicec.fillRect(map_unit/2+map_unit*4.5, map_unit*6+map_unit*1.5, map_unit*3, map_unit/1.5)
                            choicec.fillRect(map_unit/2+map_unit*0.5, map_unit*6+map_unit*2.2, map_unit*3, map_unit/1.5)
                            choicec.fillRect(map_unit/2+map_unit*4.5, map_unit*6+map_unit*2.2, map_unit*3, map_unit/1.5)
                            choicec.fillStyle = "white"
                            choicec.fillText("Fight!", map_unit/2+map_unit*1.4, map_unit*6+map_unit*2)
                            choicec.fillText("Pokemon", map_unit/2+map_unit*5.1, map_unit*6+map_unit*2)
                            choicec.fillText("Bag", map_unit/2+map_unit*1.5 , map_unit*6+map_unit*2.7)
                            choicec.fillText("Run", map_unit/2+map_unit*5.5, map_unit*6+map_unit*2.7)
                            choice2c.fillRect(map_unit/2+map_unit*0.5, map_unit*6+map_unit*1.5, map_unit*3, map_unit/1.5)
                            $("#choice").fadeIn(300)
                            $("#choice2").fadeIn(300)
                        }
                        fight4c.fillStyle = "red"
                        fight4c.fillRect(map_unit*5.5, map_unit*3.5, map_unit, map_unit/6)
                        fight4c.fillRect(map_unit*2.5, map_unit*3.5, map_unit, map_unit/6)
                        fight4c.fillStyle = "green"
                        fight4c.fillRect(map_unit*5.5, map_unit*3.5, map_unit*enemy.hp/enemy.maxHP, map_unit/6)
                        fight4c.fillRect(map_unit*2.5, map_unit*3.5, map_unit*character.current_pokemon.hp/character.current_pokemon.maxHP, map_unit/6) 
                    }
                    else if (findex === 2 && character.inventory.potion > 0){
                        character.current_pokemon.hp += character.current_pokemon.maxHP/2
                        if (character.current_pokemon.hp > character.current_pokemon.maxHP){
                            character.current_pokemon.hp = character.current_pokemon.maxHP
                        }
                        character.inventory.potion -= 1
                    }

                else if (menu === 4){
                    if (Math.floor(Math.random()*100)+1 > 40){
                        console.log("aaaaaaaaaaaaaaaaa")
                        if (inCave === true){
                            $("#cavelight").fadeIn(500)
                        }
                        enemy = pokemonlist[Math.floor(Math.random()*pokemonlist.length)]
                        enemy.hp = enemy.maxHP
                        fighting = false
                        menu = 0
                        $("#fight").fadeOut(500)
                        $("#fight2").fadeOut(500)
                        $("#fight3").fadeOut(500)
                        $("#fight4").fadeOut(500)
                        $("#choice").fadeOut(500)
                        $("#choice2").fadeOut(500)
                        setTimeout(function(){
                            fightc.clearRect(0,0,width,height)
                            fight2c.clearRect(0,0,width,height)
                            fight3c.clearRect(0,0,width,height)
                            fight4c.clearRect(0,0,width,height)
                            choicec.clearRect(0,0,width,height)
                            choice2c.clearRect(0,0,width,height)
                        },500)   
                    } 
                    else {
                        let enemyattack = enemy.moves[Math.floor(Math.random()*4)]
                        fight4c.clearRect(0,0,width,height)
                        fight4c.font = "29px Verdana";
                        fight4c.fillStyle = "rgba(255, 255, 255, 0.6)"
                        fight4c.fillRect(0,0,width,map_unit*1.9)
                        if (enemyattack.effects === null){
                            if (Math.floor(Math.random()*enemy.accuracy*enemyattack.accuracy)+1 > character.current_pokemon.dodge){
                                if (character.current_pokemon.weakness === enemyattack.type){
                                    character.current_pokemon.hp -= enemyattack.damage*enemy.attack*1.5
                                }
                                else {
                                    character.current_pokemon.hp -= enemyattack.damage*enemy.attack
                                }
                                fight4c.fillStyle = "black"
                                fight4c.fillText(""+enemy.name + " usou "+enemyattack.name+"!", map_unit*2, map_unit*1.5)
                            }
                            else{
                                fight4c.fillStyle = "black"
                                fight4c.fillText(""+enemy.name + " falhou!", map_unit*2, map_unit*1.5)
                            }
                        }
                        else {
                            if (Math.floor(Math.random()*enemy.accuracy*enemyattack.accuracy)+1 > character.current_pokemon.dodge){
                                if (enemyattack.effects[0] = "damage"){
                                    if (character.current_pokemon.attack > 0){
                                        character.current_pokemon.attack -= enemyattack.effects[1]
                                    }
                                    else {
                                        character.current_pokemon.attack = 0
                                    }
                                }
                                else if (enemyattack.effects[0] = "dodge"){
                                    if (character.current_pokemon.dodge > 0){
                                        character.current_pokemon.dodge -= enemyattack.effects[1]
                                    }
                                    else {
                                        character.current_pokemon.dodge = 0
                                    }
                                }
                                else if (enemyattack.effects[0] = "accuracy"){
                                    if (character.current_pokemon.accuracy > 0){
                                        character.current_pokemon.accuracy -= enemyattack.effects[1]
                                    }
                                    else {
                                        character.current_pokemon.accuracy = 0
                                    }
                                }
                                fight4c.fillStyle = "black"
                                fight4c.fillText(""+enemy.name + " usou "+enemyattack.name+"!", map_unit*2, map_unit*1.5)
                            }
                            else {
                                fight4c.fillStyle = "black"
                                fight4c.fillText(""+enemy.name + " falhou!", map_unit*2, map_unit*1.5)
                            }
                        }
                        if (character.current_pokemon.hp <= 0){
                            enemy = pokemonlist[Math.floor(Math.random()*pokemonlist.length)]
                            enemy.hp = enemy.maxHP  
                            let fight5 = document.getElementById("fight5")
                            let fight5c = fight5.getContext("2d")
                            $("#fight5").fadeOut(1)
                            fight5c.drawImage(document.getElementById("lose"), 0, map_unit*2, width, map_unit*3)
                            $("#fight5").fadeIn(500)
                            fighting = false
                            menu = 0
                            $("#fight").delay(500).fadeOut(500)
                            $("#fight2").delay(500).fadeOut(500)
                            $("#fight3").delay(500).fadeOut(500)
                            $("#fight4").delay(500).fadeOut(500)
                            $("#choice").delay(500).fadeOut(500)
                            $("#choice2").delay(500).fadeOut(500)
                            $("#fight5").delay(500).fadeOut(500)
                            setTimeout(function(){
                                fightc.clearRect(0,0,width,height)
                                fight2c.clearRect(0,0,width,height)
                                fight3c.clearRect(0,0,width,height)
                                fight4c.clearRect(0,0,width,height)
                                choicec.clearRect(0,0,width,height)
                                choice2c.clearRect(0,0,width,height)
                                fight5c.clearRect(0,0,width,height)
                            },1000)   
                        }
                        fight4c.fillStyle = "red"
                        fight4c.fillRect(map_unit*5.5, map_unit*3.5, map_unit, map_unit/6)
                        fight4c.fillRect(map_unit*2.5, map_unit*3.5, map_unit, map_unit/6)
                        fight4c.fillStyle = "green"
                        fight4c.fillRect(map_unit*5.5, map_unit*3.5, map_unit*enemy.hp/enemy.maxHP, map_unit/6)
                        fight4c.fillRect(map_unit*2.5, map_unit*3.5, map_unit*character.current_pokemon.hp/character.current_pokemon.maxHP, map_unit/6) 
                    }
                }
                break
                }
                else if (menu === 4){
                    if (Math.floor(Math.random()*100)+1 > 40){
                        if (inCave === true){
                            $("#cavelight").fadeIn(500)
                        }
                        fightaudio.load()
                        enemy = pokemonlist[Math.floor(Math.random()*pokemonlist.length)]
                        enemy.hp = enemy.maxHP
                        fighting = false
                        menu = 0
                        $("#fight").fadeOut(500)
                        $("#fight2").fadeOut(500)
                        $("#fight3").fadeOut(500)
                        $("#fight4").fadeOut(500)
                        $("#choice").fadeOut(500)
                        $("#choice2").fadeOut(500)
                        setTimeout(function(){
                            fightc.clearRect(0,0,width,height)
                            fight2c.clearRect(0,0,width,height)
                            fight3c.clearRect(0,0,width,height)
                            fight4c.clearRect(0,0,width,height)
                            choicec.clearRect(0,0,width,height)
                            choice2c.clearRect(0,0,width,height)
                        },500)   
                    } 
                    else {
                        let enemyattack = enemy.moves[Math.floor(Math.random()*4)]
                        fight4c.clearRect(0,0,width,height)
                        fight4c.font = "29px Verdana";
                        fight4c.fillStyle = "rgba(255, 255, 255, 0.6)"
                        fight4c.fillRect(0,0,width,map_unit*1.9)
                        if (enemyattack.effects === null){
                            if (Math.floor(Math.random()*enemy.accuracy*enemyattack.accuracy)+1 > character.current_pokemon.dodge){
                                if (character.current_pokemon.weakness === enemyattack.type){
                                    character.current_pokemon.hp -= enemyattack.damage*enemy.attack*1.5
                                }
                                else {
                                    character.current_pokemon.hp -= enemyattack.damage*enemy.attack
                                }
                                fight4c.fillStyle = "black"
                                fight4c.fillText(""+enemy.name + " usou "+enemyattack.name+"!", map_unit*2, map_unit*1.5)
                            }
                            else{
                                fight4c.fillStyle = "black"
                                fight4c.fillText(""+enemy.name + " falhou!", map_unit*2, map_unit*1.5)
                            }
                        }
                        else {
                            if (Math.floor(Math.random()*enemy.accuracy*enemyattack.accuracy)+1 > character.current_pokemon.dodge){
                                if (enemyattack.effects[0] = "damage"){
                                    if (character.current_pokemon.attack > 0){
                                        character.current_pokemon.attack -= enemyattack.effects[1]
                                    }
                                    else {
                                        character.current_pokemon.attack = 0
                                    }
                                }
                                else if (enemyattack.effects[0] = "dodge"){
                                    if (character.current_pokemon.dodge > 0){
                                        character.current_pokemon.dodge -= enemyattack.effects[1]
                                    }
                                    else {
                                        character.current_pokemon.dodge = 0
                                    }
                                }
                                else if (enemyattack.effects[0] = "accuracy"){
                                    if (character.current_pokemon.accuracy > 0){
                                        character.current_pokemon.accuracy -= enemyattack.effects[1]
                                    }
                                    else {
                                        character.current_pokemon.accuracy = 0
                                    }
                                }
                                fight4c.fillStyle = "black"
                                fight4c.fillText(""+enemy.name + " usou "+enemyattack.name+"!", map_unit*2, map_unit*1.5)
                            }
                            else {
                                fight4c.fillStyle = "black"
                                fight4c.fillText(""+enemy.name + " falhou!", map_unit*2, map_unit*1.5)
                            }
                        }
                        if (character.current_pokemon.hp <= 0){
                            enemy = pokemonlist[Math.floor(Math.random()*pokemonlist.length)]
                            enemy.hp = enemy.maxHP  
                            let fight5 = document.getElementById("fight5")
                            let fight5c = fight5.getContext("2d")
                            $("#fight5").fadeOut(1)
                            fight5c.drawImage(document.getElementById("lose"), 0, map_unit*2, width, map_unit*3)
                            $("#fight5").fadeIn(500)
                            fighting = false
                            menu = 0
                            $("#fight").delay(500).fadeOut(500)
                            $("#fight2").delay(500).fadeOut(500)
                            $("#fight3").delay(500).fadeOut(500)
                            $("#fight4").delay(500).fadeOut(500)
                            $("#choice").delay(500).fadeOut(500)
                            $("#choice2").delay(500).fadeOut(500)
                            $("#fight5").delay(500).fadeOut(500)
                            setTimeout(function(){
                                fightc.clearRect(0,0,width,height)
                                fight2c.clearRect(0,0,width,height)
                                fight3c.clearRect(0,0,width,height)
                                fight4c.clearRect(0,0,width,height)
                                choicec.clearRect(0,0,width,height)
                                choice2c.clearRect(0,0,width,height)
                                fight5c.clearRect(0,0,width,height)
                            },1000)   
                        }
                        fight4c.fillStyle = "red"
                        fight4c.fillRect(map_unit*5.5, map_unit*3.5, map_unit, map_unit/6)
                        fight4c.fillRect(map_unit*2.5, map_unit*3.5, map_unit, map_unit/6)
                        fight4c.fillStyle = "green"
                        fight4c.fillRect(map_unit*5.5, map_unit*3.5, map_unit*enemy.hp/enemy.maxHP, map_unit/6)
                        fight4c.fillRect(map_unit*2.5, map_unit*3.5, map_unit*character.current_pokemon.hp/character.current_pokemon.maxHP, map_unit/6) 
                    }
                }
                break
            case "KeyB":
                menu = 0
                choicec.font = "29px Verdana";
                choicec.fillStyle = "rgba(255, 255, 255, 0.6)"
                choice2c.fillStyle  = "rgba(255, 255, 255, 0.3)";
                $("#choice2").fadeOut(1)
                $("#choice").fadeOut(1)
                choicec.clearRect(0,0,width,height)
                choice2c.clearRect(0,0,width,height)
                choicec.fillRect(0,map_unit*6+map_unit*1.3, width, map_unit*1.8)
                choicec.fillStyle = "black"
                choicec.fillRect(map_unit/2+map_unit*0.5, map_unit*6+map_unit*1.5, map_unit*3, map_unit/1.5)
                choicec.fillRect(map_unit/2+map_unit*4.5, map_unit*6+map_unit*1.5, map_unit*3, map_unit/1.5)
                choicec.fillRect(map_unit/2+map_unit*0.5, map_unit*6+map_unit*2.2, map_unit*3, map_unit/1.5)
                choicec.fillRect(map_unit/2+map_unit*4.5, map_unit*6+map_unit*2.2, map_unit*3, map_unit/1.5)
                choicec.fillStyle = "white"
                choicec.fillText("Fight!", map_unit/2+map_unit*1.4, map_unit*6+map_unit*2)
                choicec.fillText("Pokemon", map_unit/2+map_unit*5.1, map_unit*6+map_unit*2)
                choicec.fillText("Bag", map_unit/2+map_unit*1.5 , map_unit*6+map_unit*2.7)
                choicec.fillText("Run", map_unit/2+map_unit*5.5, map_unit*6+map_unit*2.7)
                choice2c.fillRect(map_unit/2+map_unit*0.5, map_unit*6+map_unit*1.5, map_unit*3, map_unit/1.5)
                $("#choice").fadeIn(300)
                $("#choice2").fadeIn(300)
                break
        }
        choice2c.clearRect(0,0,width,height)
        switch (findex){
            case 1:
                choice2c.fillRect(map_unit/2+map_unit*0.5, map_unit*6+map_unit*1.5, map_unit*3, map_unit/1.5)
                break
            case 2:
                choice2c.fillRect(map_unit/2+map_unit*4.5, map_unit*6+map_unit*1.5, map_unit*3, map_unit/1.5)
                break
            case 3:
                choice2c.fillRect(map_unit/2+map_unit*0.5, map_unit*6+map_unit*2.2, map_unit*3, map_unit/1.5)
                break
            case 4:
                choice2c.fillRect(map_unit/2+map_unit*4.5, map_unit*6+map_unit*2.2, map_unit*3, map_unit/1.5)
                break
        }
        if (conf){
            if (menu === 1){
                choicec.fillStyle = "rgba(255, 255, 255, 0.6)"
                choice2c.fillStyle  = "rgba(255, 255, 255, 0.3)";
                choicec.clearRect(0,0,width,height)
                choice2c.clearRect(0,0,width,height)
                choicec.fillRect(0,map_unit*6+map_unit*1.3, width, map_unit*1.8)
                choicec.fillStyle = "black"
                choicec.fillRect(map_unit/2+map_unit*0.5, map_unit*6+map_unit*1.5, map_unit*3, map_unit/1.5)
                choicec.fillRect(map_unit/2+map_unit*4.5, map_unit*6+map_unit*1.5, map_unit*3, map_unit/1.5)
                choicec.fillRect(map_unit/2+map_unit*0.5, map_unit*6+map_unit*2.2, map_unit*3, map_unit/1.5)
                choicec.fillRect(map_unit/2+map_unit*4.5, map_unit*6+map_unit*2.2, map_unit*3, map_unit/1.5)
                choicec.fillStyle = "white"
                choicec.fillText(character.current_pokemon.moves[0].name, map_unit/2+map_unit*1.4, map_unit*6+map_unit*2)
                choicec.fillText(character.current_pokemon.moves[1].name, map_unit/2+map_unit*5.1, map_unit*6+map_unit*2)
                choicec.fillText(character.current_pokemon.moves[2].name, map_unit/2+map_unit*1.5 , map_unit*6+map_unit*2.7)
                choicec.fillText(character.current_pokemon.moves[3].name, map_unit/2+map_unit*5.5, map_unit*6+map_unit*2.7)
            }
            else if (menu === 2){
                choicec.fillStyle = "rgba(255, 255, 255, 0.6)"
                choice2c.fillStyle  = "rgba(255, 255, 255, 0.3)";
                choicec.clearRect(0,0,width,height)
                choice2c.clearRect(0,0,width,height)
                choicec.fillRect(0,map_unit*6+map_unit*1.3, width, map_unit*1.8)
                choicec.fillStyle = "black"
                choicec.fillRect(map_unit/2+map_unit*0.5, map_unit*6+map_unit*1.5, map_unit*3, map_unit/1.5)
                choicec.fillRect(map_unit/2+map_unit*4.5, map_unit*6+map_unit*1.5, map_unit*3, map_unit/1.5)
                choicec.fillRect(map_unit/2+map_unit*0.5, map_unit*6+map_unit*2.2, map_unit*3, map_unit/1.5)
                choicec.fillRect(map_unit/2+map_unit*4.5, map_unit*6+map_unit*2.2, map_unit*3, map_unit/1.5)
                choicec.fillStyle = "white"
                for (let i = 0; i < character.pokemon.length; i++){
                    if (i === 0){
                choicec.fillText(character.pokemon[i].name, map_unit/2+map_unit*1.4, map_unit*6+map_unit*2)
                    }
                    else if (i === 1){
                choicec.fillText(character.pokemon[i].name, map_unit/2+map_unit*5.1, map_unit*6+map_unit*2)
                    }
                    else if (i === 2){
                choicec.fillText(character.pokemon[i].name, map_unit/2+map_unit*1.5 , map_unit*6+map_unit*2.7)
                    }
                    else if (i === 3){
                choicec.fillText(character.pokemon[i].name, map_unit/2+map_unit*5.5, map_unit*6+map_unit*2.7)
                    }
                }
            }
            else if (menu === 3){
                choicec.fillStyle = "rgba(255, 255, 255, 0.6)"
                choice2c.fillStyle  = "rgba(255, 255, 255, 0.3)";
                choicec.clearRect(0,0,width,height)
                choice2c.clearRect(0,0,width,height)
                choicec.fillRect(0,map_unit*6+map_unit*1.3, width, map_unit*1.8)
                choicec.fillStyle = "black"
                choicec.fillRect(map_unit/2+map_unit*0.5, map_unit*6+map_unit*1.5, map_unit*3, map_unit/1.5)
                choicec.fillRect(map_unit/2+map_unit*4.5, map_unit*6+map_unit*1.5, map_unit*3, map_unit/1.5)
                choicec.fillRect(map_unit/2+map_unit*0.5, map_unit*6+map_unit*2.2, map_unit*3, map_unit/1.5)
                choicec.fillRect(map_unit/2+map_unit*4.5, map_unit*6+map_unit*2.2, map_unit*3, map_unit/1.5)
                choicec.fillStyle = "white"
                choicec.fillText("Pokeball", map_unit/2+map_unit*1.4, map_unit*6+map_unit*2)
                choicec.fillText("Potion", map_unit/2+map_unit*5.1, map_unit*6+map_unit*2)
                choicec.fillText("WIP", map_unit/2+map_unit*1.5 , map_unit*6+map_unit*2.7)
                choicec.fillText("WIP", map_unit/2+map_unit*5.5, map_unit*6+map_unit*2.7)
            }
        }
    }
}

function countTime(time) {
    let minutes = Math.floor(time / 60000);
    let seconds = ((time % 60000) / 1000).toFixed(0);
    if (seconds < 10){
        seconds = "0"+seconds
    }
    else{
        seconds = seconds
    }
    return [minutes + ":" + seconds, time];
}
//------------------------------------------------------------------------------------//

let x = mapa.startpos[0]
let y = mapa.startpos[1]

let pokeChoice = false
let fighting = false
let talking = false

let inLab = false
let inCenter = false
let inShop = false
let inGym = false
let inCave = false
let inGrass = false

let p_pos = [y, x]

let labDone = false
let onedone = false
let twodone = false
let threedone = false
let fourdone = false

let doing = true
let doingfight = false

let index = 1
let findex = 1
let menu = 0
let current_pokemon_index = 0
let dead = false

let data1 = Date.now()

let pokemonlist = [pokemon.charmander, pokemon.charmander, pokemon.squirtle, pokemon.squirtle, pokemon.bulbasaur, pokemon.bulbasaur, pokemon.pidgey, pokemon.pidgey, pokemon.ratata, pokemon.ratata, pokemon.caterpie, pokemon.caterpie, pokemon.pikachu, pokemon.machop, pokemon.psyduck]
let gymlist = [gym_pokemon.squirtle, gym_pokemon.bulbasaur, gym_pokemon.charmander, gym_pokemon.pikachu]
let cavelist = [cave_pokemon.geodude, cave_pokemon.zubat]
let enemy =  Object.assign({}, pokemonlist[Math.floor(Math.random()*pokemonlist.length)])
enemy.hp = enemy.maxHP

function main(){
    town.play()
    $(document).keydown(delay(function (event) {
        let keymain = event.code
        if (!pokeChoice && !fighting && !talking){
            fightaudio.load()
            town.play()
            p_pos = [y, x]
            movement(event)
            collision(read_collision_map(currentMap.collision), p_pos, event)
            animation(event, p_pos)
            character_animation(event)
        }
        else if (fighting){
            town.load()
            fight(event)
            fightaudio.play()
        }
        else if (talking){

        }
        else if (pokeChoice && !labDone){
            escolha(event)
        }
        console.log(y,x)
    }, 60))
}

main()

window.onbeforeunload = function(){
    let data2 = Date.now()
    let user = JSON.parse(localStorage.getItem(sessionStorage.getItem("Current User")))
    user[2] += (data2-data1)
    user = JSON.stringify(user)
    localStorage.setItem(sessionStorage.getItem("Current User"), user)
}